matrix:
  rows:
    - { target: aarch64-apple-darwin,      platform: osx-aarch_64   }
    - { target: x86_64-apple-darwin,       platform: osx-x86_64     }
    - { target: aarch64-unknown-linux-gnu, platform: linux-aarch_64 }
    - { target: x86_64-unknown-linux-gnu,  platform: linux-x86_64   }
    - { target: x86_64-pc-windows-gnu,     platform: windows-x86_64 }

hooks:
  script:
    before:
      - run: |
          cargo install --locked cargo-zigbuild
        verbose: true
        filter:
          includes: ['assemble']
      - run: |
          rustup target add {{ matrix.target }}
          cargo zigbuild --target {{ matrix.target }}
        applyDefaultMatrix: true
        verbose: true
        filter:
          includes: ['assemble']

project:
  name: helloworld
  description: HelloWorld in Rust
  longDescription: HelloWorld in Rust
  links:
    homepage: https://github.com/aalmiray/helloworld-rustzig-slsa
  authors:
    - Andres Almiray
  license: Apache-2.0
  inceptionYear: 2021
  stereotype: CLI
    
release:
  github:
    overwrite: true
    changelog:
      formatted: ALWAYS
      preset: conventional-commits
      contributors:
        format: '- {{contributorName}}{{#contributorUsernameAsLink}} ({{.}}){{/contributorUsernameAsLink}}'
        
assemble:
  archive:
    helloworld:
      active: ALWAYS
      formats: [ ZIP ]
      applyDefaultMatrix: true
      archiveName: '{{distributionName}}-{{projectVersion}}-{{ matrix.target }}'
      fileSets:
        - input: 'target/{{ matrix.target }}'
          output: 'bin'
          includes: [ 'helloworld{.exe,}' ]
        - input: '.'
          includes: [ 'LICENSE' ]

distributions:
  helloworld:
    executable:
      windowsExtension: exe
