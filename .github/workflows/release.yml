name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

jobs:
  precheck:
    name: Precheck
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

  build:
    needs: [ precheck ]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    uses: jreleaser/helloworld-rustx/.github/workflows/reusable-build.yml@main
    with:
      version: ${{ needs.precheck.outputs.VERSION }}

  universal:
    needs: [ precheck, build ]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    uses: jreleaser/helloworld-rustx/.github/workflows/reusable-build-universal.yml@main
    with:
      version: ${{ needs.precheck.outputs.VERSION }}

  release:
    name: Release
    needs: [ precheck, build, universal ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Commit version
        run: |
          sed -i -e "s/^version = "\(.*\)"/version = "${{ github.event.inputs.version }}/g" Cargo.toml
          git add Cargo.toml
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version ${{ needs.precheck.outputs.VERSION }}"
          git push origin main

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          arguments: release -PartifactsDir=artifacts -PskipArchiveResolver
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
